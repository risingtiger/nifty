

import { InitInterval as SwitchStation_InitInterval, AddRoute as SwitchStation_AddRoute } from './includes/switchstation.js';
import  './includes/lit-html.js';
import  './includes/suckinjs.js';
import  './includes/firebase.js';
import  './includes/ddom.js';




(window as any).__VIEWS = [
    { path: "^upgrade$", name: "upgrade", dependencies:[] },
];




(window as any).__COMPONENTS = [
    { name: "graphing", dependencies: [{ type: "thirdparty", name: "chartist" }]},
    { name: "auth", dependencies: [{ type: "thirdparty", name: "overlay" }]},
    { name: "overlay", dependencies: []}
];




(window as any).__THIRDPARTY = [
    { name: "chartist", dependencies: []},
];




(window as any).__LIBS = [
    { name: "testlib", dependencies: []},
];




window.addEventListener("load", async (_e) => {

    if ((window as any).APPVERSION > 0)
        await navigator.serviceWorker.register("/sw.js", {   scope: "/"   });

    const views = [...(window as any).__VIEWS, ...(window as any).__APPINSTANCE_VIEWS];

    views.forEach(r=> SwitchStation_AddRoute(r))

    if (window.location.href.includes("errmsg")) {
        const errmsg = (window.location.href.match(/errmsg=(.+)/))![1]

        confirm(decodeURIComponent(errmsg))

        window.location.href = "/"
    }

    else {
        SwitchStation_InitInterval(); 
    }

})




window.addEventListener("focus", () => {

    console.log("checking for app update");

  if ((window as any).APPVERSION > 0) {
    console.log("checking for app update")
    fetch('/api/appfocusping?appversion=' + (window as any).APPVERSION) // will be set in index.html, but from rollup script
      .then(response => response.text())
      .then(data => { 
        if (data === "no") {
          window.location.hash = "upgrade";
        }   });
  }

})



